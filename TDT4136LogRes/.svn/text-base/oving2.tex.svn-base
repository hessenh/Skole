\documentclass[norsk]{article}

% For norske bokstaver
\usepackage[T1]{fontenc}
\usepackage{babel}
\usepackage[utf8]{inputenc}
\usepackage{parskip} % for litt mellomrom mellom avsnittene
\usepackage{amsmath,bussproofs}

\title{TDT4136 Logic And Reasoning Systems\\
\Huge Exercise 2}
\author{Stian Hvatum (hvatum)\\MTDT}

\begin{document}
\maketitle
\thispagestyle{empty}
\newpage
\pagenumbering{Roman}
\tableofcontents
\newpage
\pagenumbering{arabic}
\section{Propositional Logic}
\subsection{Truth and proofs}
\subsubsection{Truth table for \(((p \Rightarrow q) \land (\neg q \Rightarrow
r)\land r) \Rightarrow p\)}
    \begin{tabular}{|c|c|c|c|c|c|c|c|}
    \hline
    \(
    p & q & r & \neg q & (p \Rightarrow q) & (\neg q \Rightarrow r) & ((p
    \Rightarrow q) \land (-\neg q \Rightarrow r) \land r) & ((p \Rightarrow q)
    \land (\neg q \Rightarrow r) \land r) \Rightarrow p \)\\
    \hline
    0 & 0 & 0 & 1 & 1 & 0 & 0 & 1 \\
    0 & 0 & 1 & 1 & 1 & 1 & 1 & 0 \\
    0 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\
    0 & 1 & 1 & 0 & 1 & 1 & 1 & 0 \\
    1 & 0 & 0 & 1 & 0 & 0 & 0 & 1 \\
    1 & 0 & 1 & 1 & 0 & 1 & 0 & 1 \\
    1 & 1 & 0 & 0 & 1 & 1 & 0 & 1 \\
    1 & 1 & 1 & 0 & 1 & 1 & 1 & 1 \\
    \hline    
    \end{tabular}

\subsubsection{How many models can you find for the formula: \(((p \Rightarrow
q) \land (-q \Rightarrow r)\land r) \Rightarrow p\)?}
Det er 6 modeller som tilfredsstiller formelen.

\subsubsection{Is the formula \(((p \Rightarrow q) \land (\neg q \Rightarrow
r)\land r) \Rightarrow p\) satisfiable?}
Ja, den er vist tilfredsstilt i tabellen over.

\subsubsection{The iacme-algorithm}
Given the \(KB = (p \Rightarrow q) \land (\neg q
\Rightarrow r) \land r\). ACME Soft wants to sell you its fantastic inference algorithm: iacme. They claim that
the following derivation is good: \(KB \underset{iacme}{\vdash} p\). Explain if
iacme is any good or not.

ACME Soft påstår at de har en algoritme \emph{iacme} slik at \emph{p} kan
bevises ut ifra \emph{KB}, eller at \emph{p} medfølger fra \emph{KB}. Problemet
er at \emph{KB} er sann også i tilfeller der \emph{p} ikke er det. Dermed kan
ikke algoritmen \emph{iacme} være noe bra.

\subsubsection{Express the following sentences in Propositional Logic:}

``If John drives to the airport then he catches the plane.''
\(D\Rightarrow P\)

``If John’s car is working then he drives to the airport.''
\(C\Rightarrow D\)

``John did not catch the plane.''
\(\neg P\)

\subsubsection{Convert the above formulas to Conjunctive Normal Form and
prove with resolution that: ``John’s car is not working.''}

\(D\Rightarrow P\) blir \(\neg D\lor P\) 

\(C\Rightarrow D\) blir \(\neg C\lor D\) 

\(-P\) er alt på denne formen

Settningen blir da:
\((\neg D\lor P) \land (\neg C\lor D) \land (\neg P)\)

Tabell for denne setningen:

\begin{tabular}{|c|c|c|c|c|c|c|c|c|c|} \hline
D & P & C & \(\neg D\)& \(\neg P\)& \(\neg C\) & \(\neg D\lor P\) &
\(\neg C\lor D\) & \((\neg D\lor P) \land (\neg C\lor D) \land (\neg P)\)\\ \hline
0 & 0 & 0 & 1 & 1 & 1 & 1 & 1 & 1\\
0 & 0 & 1 & 1 & 1 & 0 & 1 & 0 & 0\\
0 & 1 & 0 & 1 & 0 & 1 & 1 & 1 & 0\\
0 & 1 & 1 & 1 & 0 & 0 & 1 & 0 & 0\\
1 & 0 & 0 & 0 & 1 & 1 & 0 & 1 & 0\\
1 & 0 & 1 & 0 & 1 & 0 & 0 & 1 & 0\\
1 & 1 & 0 & 0 & 0 & 1 & 1 & 1 & 0\\
1 & 1 & 1 & 0 & 0 & 0 & 1 & 1 & 0\\
\hline
\end{tabular}
Vi ser at den eneste modellen der kunnskapsbasen er sann, er en modell der
bilen ikke fungerer (-D), altså kan vi konkludere med at bilen ikke fungerer.

\subsubsection{The Deduction Theorem}
Given \(a_1, a_2, \ldots, a_n \models a\). Prove that \(a_1,
a_2, \ldots, a_{n - 1} \models (a_n \Rightarrow a)\) by using the Deduction Theorem
and standard logical equivalences?

Vi bruker deduksjonsteoremet, \(a \models b \Leftrightarrow a \Rightarrow b \),
og får følgende utfall:

\begin{prooftree}
\AxiomC{\( a \lor (b \Rightarrow a) \equiv (b \Rightarrow a)\)}
\AxiomC{\((a \models b) \Leftrightarrow (a \Rightarrow b) \)}
\AxiomC{\(a_1, a_2, \ldots, a_n \models a\)}
\UnaryInfC{\( a_1, a_2, \ldots, a_{n - 1} \models a \lor a_n \models a\)}
\BinaryInfC{\( a_1, a_2, \ldots, a_{n - 1} \models a \lor a_n \Rightarrow a\)}
\BinaryInfC{\(a_1, a_2,
\ldots, a_{n - 1} \models (a_n \Rightarrow a)\)}
\end{prooftree}

(Jeg ønsker gjerne en kommentar på denne, da jeg føler
meg litt på gyngende grunn\ldots)

\section{First Order Predicate Logic}
\subsection{Express the following sentences in first order predicate logic}
\subsubsection{A boy kisses a girl}
\(\exists x\ \exists y\ boy(x) \land girl(y) \land kiss(x, y)\)

\subsubsection{Francine talked to every person in the room}
\(\forall x\ person(x) \land in(x, Room) \Rightarrow talk\_to(Francine, x)\)

\subsubsection{All paid jobs absorb and degrade the mind}
\(\forall x\ paid(x) \land job(x) \Rightarrow absorbs(x, Mind) \land
degrades(x, Mind)\)

\subsection{Express the following sentences in first order predicate logic}
\subsubsection{Jack loves a girl who doesn’t love him}
\(\exists x\ girl(x) \land loves(Jack, x) \land \neg loves(x, Jack)\)
\subsubsection{Jack was given a rose by all the girls, except by the one he
loves}
\(\forall x\ \exists y\ \exists z\ girl(x) \land \neg loves(Jack,x)
\land girl(z) \land loves(Jack, z) \land rose(y) \Rightarrow gives(x, y,
Jack) \land \neg gives(z, y, Jack)\)

\subsubsection{Not everything that can be counted counts, and not everything
that counts can be counted}
\(\exists x\ \exists y\ (countable(x) \land \neg counts(x)) \land (\neg
countable(y) \land counts(y))\)

\end{document}
